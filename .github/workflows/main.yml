name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

  install-maven:
    name: Install Maven
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven
      - name: Verify Maven Installation
        run: mvn -v

  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: install-maven
    timeout-minutes: 20
    services:
      sonarqube:
        image: sonarqube:community:9.9.1
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s http://localhost:9000/api/system/health | grep -q UP"
          --health-interval=15s
          --health-timeout=10s
          --health-retries=60
          --cpus=3
          --memory=4g
          -v /tmp/sonarqube_logs:/opt/sonarqube/logs
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Wait for SonarQube to be ready
        run: sleep 60

      - name: List All Containers (Debug)
        if: failure()
        run: docker ps -a

      - name: Inspect SonarQube Container (Debug)
        if: failure()
        run: |
          CONTAINER_ID=$(docker ps -aq --filter "ancestor=sonarqube:community:9.9.1")
          if [ -n "$CONTAINER_ID" ]; then
            docker inspect $CONTAINER_ID
            docker logs $CONTAINER_ID
          else
            echo "No SonarQube container found."
          fi

      - name: Print SonarQube Logs (Debug)
        if: failure()
        run: cat /tmp/sonarqube_logs/*

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_LOGIN: admin
          SONAR_PASSWORD: admin
        run: |
          mvn clean verify sonar:sonar \
          -Dsonar.projectKey=YourProjectKey \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_LOGIN \
          -Dsonar.password=$SONAR_PASSWORD

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Build with Maven
        run: mvn clean install
